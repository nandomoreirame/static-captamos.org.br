/*
 * jMentions Plugin - v1.0.0
 * Author: Igor Corradi
 * Email: igorcorradi.dev@gmail.com
 * Date: Jun 13 2016
 *
 * Description: Mention people like Facebook and Asana.
 * */

(function($) {
  'use strict';

  var regex = /@([A-Za-z]+[_A-Za-z0-9]+)/gi;
  var regex_tag = /#([A-Za-z]+[_A-Za-z0-9]+)/gi;

  $.jMentions = function(elm, options) {
    function renderDropdown(mentions, dropdownClass) {
      var dropdown = $('<div class="' + dropdownClass +
                       '"></div>');

      if (mentions.length) {
        $.jMentions.elm = elm;

        mentions.forEach(function(mention) {
          var value = mention[$.jMentions.elm.data('options').value],
              label = mention[$.jMentions.elm.data('options').label],
              type = mention[$.jMentions.elm.data('options').type],
              avatar = mention[$.jMentions.elm.data('options').avatar];

			if(is_tagging){
				//para un tag de palabra, no muestro la imagen
				dropdown.append('<div onclick="$(this).jMentions.addMention(\'' +
                          value + '\')" data-mention="' + value + '" >' +
                          label + '</div>');
			}
			else{
				//mencion de usuario va con avatar
				dropdown.append('<div onclick="$(this).jMentions.addMention(\'' +
                          value + '\')" data-mention="' + value + '" >' +
                          '<img src=\"' + avatar + '\" >' +
                          label + '</div>');
			}
		
        });

        $('.' + $.jMentions.elm.data('options').dropdownClass).remove();
        $(elm).after(dropdown);
      }
    }

    function captureTextSelection() {
      if (window.getSelection().anchorNode.parentNode.tagName == 'SPAN') {
        selectedText.push(window.getSelection().anchorNode.parentNode);
      }

      if (window.getSelection().focusNode.parentNode.tagName == 'SPAN') {
        selectedText.push(window.getSelection().focusNode.parentNode);
      }
    }

    function removeCursorFromMention() {
      var target = null;

      if (window.getSelection) {
        target = window.getSelection().getRangeAt(0).commonAncestorContainer;
        target = (target.nodeType === 1) ? target : target.parentNode;

        if (target.tagName == 'SPAN') {
          var tmp = $('<span>').insertAfter(target),
          textNode = document.createTextNode("\u200b"),
          node = tmp.get(0),
          range = null,
          sel = null;

          range = document.createRange();
          range.selectNode(node);
          range.setStartAfter(node);
          range.insertNode(textNode);
          range.setStartAfter(textNode);
          sel = window.getSelection();
          sel.removeAllRanges();
          sel.addRange(range);
          tmp.remove();
        }
      }
    }

    var _options = $.extend({
          dropdownClass: 'jmentions-dropdown',
          type: 'type',
          value: 'value',
          label: 'label',
          avatar: 'avatar',
          source: function() { return {}; }
        }, options);

    $(elm).data('options', _options);

    var textLength,
        selectedText = [];

    $.jMentions.getResults = function(selector) {
      var targets = [],
          mentions;

      if (selector) {
        mentions = $(selector).find('span[value]');
      } else {
        mentions = $(elm).find('span[value]');
      }

	  
      if (mentions) {
        for (var i = 0; i < mentions.length; i++) {
			
          if (targets.indexOf($(mentions[i]).attr('value')) == -1
			&& $(mentions[i]).attr('type') == 'user') {
				$(mentions[i]).removeAttr('type');
				targets.push($(mentions[i]).attr('value'));
          }
        }
      }

      return targets;
    };

    $.jMentions.getTags = function(selector) {
      var targets = [],
          mentions;

      if (selector) {
        mentions = $(selector).find('span[value]');
      } else {
        mentions = $(elm).find('span[value]');
      }

	  
      if (mentions) {
        for (var i = 0; i < mentions.length; i++) {
			
          if (targets.indexOf($(mentions[i]).attr('value')) == -1
			&& $(mentions[i]).attr('type') == 'tag') {
				$(mentions[i]).removeAttr('type');
				targets.push($(mentions[i]).text());
          }
        }
      }

      return targets;
    };

    var typingTimer;
    var me;

    $(elm).keyup(function(e) {
    	clearTimeout(typingTimer);
    	me = $(this);
		
    	typingTimer = setTimeout(function(){

	      $('.' + me.data('options').dropdownClass).remove();

	      var match = me.text().match(regex);
	      var match_tag = me.text().match(regex_tag);

		  //chequeo esta var para determinar que estoy taggeando
			if(is_tagging){
				  //tag por palabra #...
				  if (match_tag) {
					//si machea con un tag
					var len = match_tag[0].length,
						dropdownClass = me.data('options').dropdownClass,
						pureMatch = match_tag[0].slice(1, len);

					if (me.data('options').source(pureMatch).promise) {
					  me.data('options').source(pureMatch).promise().done(function(data) {
						renderDropdown(data, dropdownClass);
						$.jMentions.mentions = data;
					  });
					} else {
					  var data = me.data('options').source(pureMatch);
					  renderDropdown(data, dropdownClass);
					  $.jMentions.mentions = data;
					}
				  } else {
					$.jMentions.mentions = [];
				  }
			}
			else {
				//mencion a usuario @
				if (match) {
					//si machea con una mencion de usuario
					var len = match[0].length,
						dropdownClass = me.data('options').dropdownClass,
						pureMatch = match[0].slice(1, len);

					if (me.data('options').source(pureMatch).promise) {
					  me.data('options').source(pureMatch).promise().done(function(data) {
						renderDropdown(data, dropdownClass);
						$.jMentions.mentions = data;
					  });
					} else {
					  var data = me.data('options').source(pureMatch);
					  renderDropdown(data, dropdownClass);
					  $.jMentions.mentions = data;
					}
				  } else {
					$.jMentions.mentions = [];
				  }
		  }

    	}, 200);

	      var range = window.getSelection().getRangeAt(0);

	      // delete the mention
	      if (textLength && me.html().length < textLength) {
	        if (range.commonAncestorContainer.parentNode.tagName == 'SPAN') {
	          me[0].removeChild(range.commonAncestorContainer.parentNode);
	        }
	      }

	      if (window.getSelection().toString()) {
	        captureTextSelection();
	      } else {
	        removeCursorFromMention();
	      }

	      textLength = me.html().length;

    });

    $(elm).keydown(function(e) {
      if(selectedText.length) {
        for (var i = 0; i < selectedText.length; i++) {
          $(this)[0].removeChild(selectedText[i]);
        }
      }

      selectedText = [];
    });

    $(elm).mouseup(function(e) {
      if (window.getSelection().toString()) {
        captureTextSelection();
      } else {
        removeCursorFromMention();
      }
    });
  };

  $.fn.jMentions = function(options) {
    return $.jMentions(this, options);
  };

  $.fn.jMentions.addMention = function(person) {
	$.jMentions.mentions.forEach(function(mention) {
	  if (person == mention[$.jMentions.elm.data('options').value]) {
        person = mention;
      }
    });

    var $elm = $($.jMentions.elm),
        mentionHTML = '&#8203;<span value=\"' +
        person[$.jMentions.elm.data('options').value] + '\"'+
		' type=\"'+person[$.jMentions.elm.data('options').type]+'\">' +
        person[$.jMentions.elm.data('options').label] + '</span>&#8203;&nbsp;';

		if(is_tagging){
			$elm.html($elm.html().replace(regex_tag, mentionHTML));
		}
		else{
			$elm.html($elm.html().replace(regex, mentionHTML));
		}
    
    $elm.click(); // focus contenteditable
	
	var theid = $.jMentions.elm.attr('id');
	if(theid == 'amigos_t'){
		var span = "<div class='usr usr"+person[$.jMentions.elm.data('options').value]+"'>"+person[$.jMentions.elm.data('options').label]+" | <a href='#' rel='"+person[$.jMentions.elm.data('options').value]+"' class='lnkDelUsr pull-right'>x</a></div>";
		$('#fNewTip #amigos-list').append(span);
		$('#amigos_t').html('');
	}
	else if(theid == 'amigos_q'){
		var span = "<div class='usr usr"+person[$.jMentions.elm.data('options').value]+"'>"+person[$.jMentions.elm.data('options').label]+" | <a href='#' rel='"+person[$.jMentions.elm.data('options').value]+"' class='lnkDelUsr pull-right'>x</a></div>";
		$('#fNewQuestion #amigos-list').append(span);
		$('#amigos_q').html('');
	}
	else if(theid == 'amigos'){
		var span = "<div class='usr usr"+person[$.jMentions.elm.data('options').value]+"'>"+person[$.jMentions.elm.data('options').label]+" | <a href='#' rel='"+person[$.jMentions.elm.data('options').value]+"' class='lnkDelUsr pull-right'>x</a></div>";
		$('#fNewPost #amigos-list').append(span);
		$('#amigos').html('');
	}
	
    // position cursor on contentditable after added mention
    var tmp = $('<span />').appendTo($elm),
    node = tmp.get(0),
    range = null,
    sel = null;

    range = document.createRange();
    range.selectNode(node);
    sel = window.getSelection();
    sel.removeAllRanges();
    sel.addRange(range);
    tmp.remove();

    $.jMentions.mentions = [];
    $('.' + $.jMentions.elm.data('options').dropdownClass).remove();
  };
}(jQuery));